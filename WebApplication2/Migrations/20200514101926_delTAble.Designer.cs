// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(OnlineEventsContext))]
    [Migration("20200514101926_delTAble")]
    partial class delTAble
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication2.Models.Access", b =>
                {
                    b.Property<int>("IdAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAccess")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameAccess")
                        .IsRequired()
                        .HasColumnName("nameAccess")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdAccess");

                    b.ToTable("Access");
                });

            modelBuilder.Entity("WebApplication2.Models.Decor", b =>
                {
                    b.Property<int>("IdDecor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDecor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameDecor")
                        .IsRequired()
                        .HasColumnName("nameDecor")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SurnameDecor")
                        .IsRequired()
                        .HasColumnName("surnameDecor")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdDecor");

                    b.ToTable("Decor");
                });

            modelBuilder.Entity("WebApplication2.Models.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEvent")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Access")
                        .HasColumnName("access");

                    b.Property<int>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasMaxLength(280)
                        .IsUnicode(false);

                    b.Property<decimal?>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("smallmoney");

                    b.Property<DateTime>("DateEvent")
                        .HasColumnName("dateEvent")
                        .HasColumnType("datetime");

                    b.Property<int?>("Decor")
                        .HasColumnName("decor");

                    b.Property<string>("House")
                        .HasColumnName("house")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("Leader")
                        .HasColumnName("leader");

                    b.Property<string>("NameEvent")
                        .IsRequired()
                        .HasColumnName("nameEvent")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("Organizer")
                        .HasColumnName("organizer");

                    b.Property<int>("Place")
                        .HasColumnName("place");

                    b.Property<string>("Sreet")
                        .IsRequired()
                        .HasColumnName("sreet")
                        .HasMaxLength(280)
                        .IsUnicode(false);

                    b.Property<int>("TypeEvent")
                        .HasColumnName("typeEvent");

                    b.HasKey("IdEvent");

                    b.HasIndex("Access");

                    b.HasIndex("Decor");

                    b.HasIndex("Leader");

                    b.HasIndex("Organizer");

                    b.HasIndex("Place");

                    b.HasIndex("TypeEvent");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("WebApplication2.Models.EventUsers", b =>
                {
                    b.Property<int>("IdEu")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEU")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEvent")
                        .HasColumnName("idEvent");

                    b.Property<int>("IdUser")
                        .HasColumnName("idUser");

                    b.HasKey("IdEu");

                    b.HasIndex("IdEvent");

                    b.HasIndex("IdUser");

                    b.ToTable("EventUsers");
                });

            modelBuilder.Entity("WebApplication2.Models.Leader", b =>
                {
                    b.Property<int>("IdLeader")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idLeader")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameLeader")
                        .IsRequired()
                        .HasColumnName("nameLeader")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SurnameLeader")
                        .IsRequired()
                        .HasColumnName("surnameLeader")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdLeader");

                    b.ToTable("Leader");
                });

            modelBuilder.Entity("WebApplication2.Models.Photo", b =>
                {
                    b.Property<int>("IdPhoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPhoto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePhoto")
                        .IsRequired()
                        .HasColumnName("namePhoto")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SurnamePhoto")
                        .IsRequired()
                        .HasColumnName("surnamePhoto")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdPhoto");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("WebApplication2.Models.Place", b =>
                {
                    b.Property<int>("IdPlace")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPlace")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePlace")
                        .IsRequired()
                        .HasColumnName("namePlace")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdPlace");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("WebApplication2.Models.RoleUser", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idRole")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnName("nameRole")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdRole");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("WebApplication2.Models.TypeEvent", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idType")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnName("nameType")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdType");

                    b.ToTable("TypeEvent");
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idUser")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginUser")
                        .IsRequired()
                        .HasColumnName("loginUser")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasColumnName("nameUser")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasColumnName("passwordUser")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("RoleUser")
                        .HasColumnName("roleUser");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdUser");

                    b.HasIndex("RoleUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplication2.Models.Event", b =>
                {
                    b.HasOne("WebApplication2.Models.Access", "AccessNavigation")
                        .WithMany("Event")
                        .HasForeignKey("Access")
                        .HasConstraintName("FK__Event__access__68487DD7");

                    b.HasOne("WebApplication2.Models.Decor", "DecorNavigation")
                        .WithMany("Event")
                        .HasForeignKey("Decor")
                        .HasConstraintName("FK__Event__decor__6B24EA82");

                    b.HasOne("WebApplication2.Models.Leader", "LeaderNavigation")
                        .WithMany("Event")
                        .HasForeignKey("Leader")
                        .HasConstraintName("FK__Event__leader__693CA210");

                    b.HasOne("WebApplication2.Models.User", "OrganizerNavigation")
                        .WithMany("Event")
                        .HasForeignKey("Organizer")
                        .HasConstraintName("FK__Event__organizer__6754599E");

                    b.HasOne("WebApplication2.Models.Place", "PlaceNavigation")
                        .WithMany("Event")
                        .HasForeignKey("Place")
                        .HasConstraintName("FK__Event__place__6A30C649");

                    b.HasOne("WebApplication2.Models.TypeEvent", "TypeEventNavigation")
                        .WithMany("Event")
                        .HasForeignKey("TypeEvent")
                        .HasConstraintName("FK__Event__typeEvent__66603565");
                });

            modelBuilder.Entity("WebApplication2.Models.EventUsers", b =>
                {
                    b.HasOne("WebApplication2.Models.Event", "IdEventNavigation")
                        .WithMany("EventUsers")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("FK__EventUser__idEve__6EF57B66");

                    b.HasOne("WebApplication2.Models.User", "IdUserNavigation")
                        .WithMany("EventUsers")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__EventUser__idUse__6E01572D");
                });

            modelBuilder.Entity("WebApplication2.Models.User", b =>
                {
                    b.HasOne("WebApplication2.Models.RoleUser", "RoleUserNavigation")
                        .WithMany("User")
                        .HasForeignKey("RoleUser")
                        .HasConstraintName("FK__User__roleUser__3B75D760");
                });
#pragma warning restore 612, 618
        }
    }
}
